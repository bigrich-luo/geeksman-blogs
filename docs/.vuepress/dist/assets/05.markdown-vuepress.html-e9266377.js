import{_ as i,W as p,X as o,$ as n,a0 as s,Z as e,a1 as t,G as l}from"./framework-0436675f.js";const c={},r=n("p",null,"VuePress 是对以 markdown 为中心的项目结构，做最简化的配置，帮助你专注于创作。",-1),d=n("p",null,"本篇文章学习一下如何使用 VuePress 搭建个人博客，并且部署在 Gitee Pages 上。",-1),u=n("h2",{id:"安装环境",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装环境","aria-hidden":"true"},"#"),s(" 安装环境")],-1),m=n("h3",{id:"_1-node-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-node-js","aria-hidden":"true"},"#"),s(" 1. Node.js")],-1),v=n("p",null,"VuePress 与 Slidev 一样，也是通过 npm 去安装部署的，所以我们需要提前安装好相关的环境。",-1),k=n("p",null,"即使你不知道什么是 Node.js 或者 npm，也是没关系的，你可以把它们简单的理解为运行 VuePress 的必备环境。",-1),g={href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"},h=t('<div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302202228255.png" width="550"></div><p>安装过程比较简单，无脑点击下一步即可。</p><p>安装完成后，我们需要验证一下，打开 CMD 命令行，输入 <code>node -v</code> 和 <code>npm -v</code>，可以正常显示版本号，则说明安装成功。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302202241134.png" width="550"></div><h3 id="_2-git" tabindex="-1"><a class="header-anchor" href="#_2-git" aria-hidden="true">#</a> 2. Git</h3><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。你可以使用 Git 方便地拉取 GitHub、Gitee 等开源网站的项目，或者上传自己的项目。</p>',6),b={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},y=t('<div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221118867.png" width="550"></div><p>下载后点击即可进行安装，下面是具体安装步骤。</p><p>有以下几步需要注意：</p><h6 id="_1-选择安装组件" tabindex="-1"><a class="header-anchor" href="#_1-选择安装组件" aria-hidden="true">#</a> 1. 选择安装组件</h6><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221120904.png" width="550"></div><p>默认勾选的选项，建议不要动。默认安装了一些组件Git Bash ,Git GUI 以及Git LFS 还有桌面快捷方式以及配置文件默认的文本编辑，使用sh脚本启动git bash.</p><p>红色框决定在所有控制台窗口中使用 TrueType 字体和是否每天检查 Git 是否有 Windows 更新，不建议勾选。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Git LFS 用于实现 Git 对大文件的支持 ，LFS策略可以节省存储空间和提高性能，比如游戏开发中设计资源文件占用很大。</p></div><h6 id="_2-选择-git-文件默认的编辑器" tabindex="-1"><a class="header-anchor" href="#_2-选择-git-文件默认的编辑器" aria-hidden="true">#</a> 2. 选择 Git 文件默认的编辑器</h6><p>我日常使用 VScode 作为编译器，所以我选择 <code>Use Visual Studio Code as Git’s default editor</code>。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221123198.png" width="550"></div><h6 id="_3-调整-path-环境" tabindex="-1"><a class="header-anchor" href="#_3-调整-path-环境" aria-hidden="true">#</a> 3. 调整 PATH 环境</h6><p>我选择推荐的选项第二种配置，因为平时我很少打开 <code>git bash</code>，一般情况下，选择直接在 CMD 中敲命令，也更符合程序员的习惯。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221148452.png" width="550"></div><p>第一种配置是 <code>仅从 Git Bash 使用 Git</code>。这是最安全的选择，因为您的PATH根本不会被修改。您只能使用 Git Bash 的 Git 命令行工具。但是这将不能通过第三方软件使用。</p><p>第二种配置是 <code>从命令行以及第三方软件进行Git</code>。该选项被认为是安全的，因为它仅向PATH添加了一些最小的Git包装器，以避免使用可选的Unix工具造成环境混乱。 你可以在 Git Bash、命令提示符和 Windows PowerShell 以及在 PATH 中寻找 Git 的任何第三方软件中使用 Git。这也是推荐的选项。</p><p>第三种配置是“从命令提示符使用 Git 和可选的 Unix 工具”。警告：这将覆盖 Windows 工具，如 <code>find 和 sort</code>。只有在了解其含义后才使用此选项。</p><h6 id="_4-选择https传输后端" tabindex="-1"><a class="header-anchor" href="#_4-选择https传输后端" aria-hidden="true">#</a> 4. 选择https传输后端</h6><p>根据默认来即可。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221132212.png" width="550"></div><p>让Git使用哪个SSL/TLs库来进行HTTPS连接?</p><p>第一个选项，使用OpenSSL库，服务器cer证书将使用ca包中.crtw文件进行验证通过，默认选这个。</p><p>第二个选项，使用本机Windows安全通道库，服务器证书将在Windows证书存储中进行验证。这个选项还允许您通过Active Directory域服务使用您的公司内部根CA证书。</p><h6 id="_5-配置结束行转换方式" tabindex="-1"><a class="header-anchor" href="#_5-配置结束行转换方式" aria-hidden="true">#</a> 5. 配置结束行转换方式</h6><p>选择第一项即可。</p><p>Git应该如何处理文本文件中的行结尾?</p><p>第一个选项，下拉是转换Windows风格，提交转换为iunix风格，在windows这是推荐默认的设置。</p><p>第二个选项，下拉时不改变，提交转换为iunix风格。对于跨平台项目，这是Unix上的推荐设置。</p><p>最后一个选项，下拉和提交都不进行任何转换，对于跨平台项目(“核心项目”)，不推荐选择此选项。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221133043.png" width="550"></div><h6 id="_6-配置终端模拟器为使用-git-bash" tabindex="-1"><a class="header-anchor" href="#_6-配置终端模拟器为使用-git-bash" aria-hidden="true">#</a> 6. 配置终端模拟器为使用 Git Bash</h6><p>选择第一项即可。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221144229.png" width="550"></div><p>第一个选项，Git Bash 将使用 MinTTY 作为终端模拟器，它拥有一个可调整大小的窗口，非矩形的选择和 Unicode 字体。Windows 控制台程序（如交互式 Python）必须通过 <code>winpty</code>启动才能在 MinTTY 中工作，默认选择这个更灵活。</p><p>第二个选项，使用 Windows 的默认控制台（cmd.exe）,它可以在 Win32 控制台程序中工作，如交互式 Python 或 node.js，但有一个非常有限的默认滚动回滚，需要配置为使用 Unicode 字体，以便正确显示非 ascil 字符，在 Windows 10之前，它的窗口不能自由调整大小，它只允许矩形文本选择。</p><h6 id="_7-选择git下拉默认行为" tabindex="-1"><a class="header-anchor" href="#_7-选择git下拉默认行为" aria-hidden="true">#</a> 7. 选择git下拉默认行为</h6><p>选择第一个</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221145658.png" width="550"></div><p>第一个选项，默认(快进或合并)。这是“git pull”的标准行为:尽可能快进当前分支到一个被捕获的分支，否则创建合并提交。</p><p>第二个选项，将当前分支改为获取的分支。如果没有要重基的本地提交，这相当于快进。</p><p>第三个选项，仅仅快进， 快进到获取的分支。如果不可能，就失败。</p><h6 id="_8-配置额外特性选项" tabindex="-1"><a class="header-anchor" href="#_8-配置额外特性选项" aria-hidden="true">#</a> 8. 配置额外特性选项</h6><p>第一个勾选，第二个随意</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221149867.png" width="550"></div><p>第一个选项，启用文件系统缓存,文件系统数据将被大量读取，并缓存到内存中以用于某些操作(“core。fscache”设置为”true”)。这提供了显著的性能提升。</p><p>第二个选项，支持符号链接，启用符号链接(需要SeCreateSymboliclink权限)。请注意，现有存储库不受此设置的影响。</p><h6 id="_9-启动实验配置选项" tabindex="-1"><a class="header-anchor" href="#_9-启动实验配置选项" aria-hidden="true">#</a> 9. 启动实验配置选项</h6><p>不勾选直接安装</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221150836.png" width="550"></div><p>安装完成后可以通过鼠标右键打开 Git Bash，如果可以正常打开，则说明安装成功。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221153615.png" width="550"></div><h3 id="新建-gitee-仓库" tabindex="-1"><a class="header-anchor" href="#新建-gitee-仓库" aria-hidden="true">#</a> 新建 Gitee 仓库</h3>',52),f={href:"https://gitee.com/",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>点击右上角的 <code>+</code>，选择新建仓库</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302201534530.png" width="550"></div><p>新建仓库的要点如下：</p><ul><li>输入一个仓库名称；</li><li>勾选使用Readme文件初始化这个仓库；</li><li>选择单分支模型；</li><li>进入仓库管理页面，将仓库设置为开源。</li></ul><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302201556298.png" width="550"></div><p>进入该仓库，点击管理，将仓库开源。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302201559268.png" width="550"></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302201601365.png" width="550"></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>仓库名必须与用户名一致，比如我的用户名为 <code>jonathanluo0604</code>，因此我的仓库名也是 <code>jonathanluo0604</code></p></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221159022.png" width="550"></div><p>接着拉取这个仓库到本地，使用命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitee.com/<span class="token operator">&lt;</span>用户名<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>仓库名<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221200487.png" width="550"></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221202732.png" width="550"></div><h2 id="vuepress-使用指南" tabindex="-1"><a class="header-anchor" href="#vuepress-使用指南" aria-hidden="true">#</a> VuePress 使用指南</h2>`,15),_={href:"https://vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},w=t(`<h3 id="全局安装" tabindex="-1"><a class="header-anchor" href="#全局安装" aria-hidden="true">#</a> 全局安装</h3><p>如果你只是想随便用下 VuePress，你可以在全局安装它：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 全局安装</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> vuepress

<span class="token comment"># 创建一个 markdown 文件</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VuePress&#39;</span> <span class="token operator">&gt;</span> README.md

<span class="token comment"># 开始编写文档</span>
vuepress dev

<span class="token comment"># 构建</span>
vuepress build

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="目录结构与基本配置" tabindex="-1"><a class="header-anchor" href="#目录结构与基本配置" aria-hidden="true">#</a> 目录结构与基本配置</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── docs
│   ├── .vuepress (可选的)
│   │   ├── components (可选的)
│   │   ├── theme (可选的)
│   │   │   └── Layout.vue
│   │   ├── public (可选的)
│   │   ├── styles (可选的)
│   │   │   ├── index.styl
│   │   │   └── palette.styl
│   │   ├── templates (可选的, 谨慎配置)
│   │   │   ├── dev.html
│   │   │   └── ssr.html
│   │   ├── config.js (可选的)
│   │   └── enhanceApp.js (可选的)
│   │ 
│   ├── README.md
│   ├── guide
│   │   └── README.md
│   └── config.md
│ 
└── package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>docs/.vuepress</code>: 用于存放全局的配置、组件、静态资源等。</li><li><code>docs/.vuepress/components</code>: 该目录中的 Vue 组件将会被自动注册为全局组件。</li><li><code>docs/.vuepress/theme</code>: 用于存放本地主题。</li><li><code>docs/.vuepress/styles</code>: 用于存放样式相关的文件。</li><li><code>docs/.vuepress/styles/index.styl</code>: 将会被自动应用的全局样式文件，会生成在最终的 CSS 文件结尾，具有比默认样式更高的优先级。</li><li><code>docs/.vuepress/styles/palette.styl</code>: 用于重写默认颜色常量，或者设置新的 stylus 颜色常量。</li><li><code>docs/.vuepress/public</code>: 静态资源目录。</li><li><code>docs/.vuepress/templates</code>: 存储 HTML 模板文件。</li><li><code>docs/.vuepress/templates/dev.html</code>: 用于开发环境的 HTML 模板文件。</li><li><code>docs/.vuepress/templates/ssr.html</code>: 构建时基于 Vue SSR 的 HTML 模板文件。</li><li><code>docs/.vuepress/config.js</code>: 配置文件的入口文件，也可以是 YML 或 toml。</li><li><code>docs/.vuepress/enhanceApp.js</code>: 客户端应用的增强。</li></ul><p>如果没有任何配置，这个网站将会是非常局限的，用户也无法在你的网站上自由导航。为了更好地自定义你的网站，让我们首先在你的文档目录下创建一个 .vuepress 目录，所有 VuePress 相关的文件都将会被放在这里。你的项目结构可能是这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├─ docs
│  ├─ README.md
│  └─ .vuepress
│     └─ config.js
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源" aria-hidden="true">#</a> 静态资源</h3><p>有时，你可能需要提供一个静态资源，但是它们并不直接被你的任何一个 markdown 文件或者主题组件引用 —— 举例来说，favicons 和 PWA 的图标，在这种情形下，你可以将它们放在 <code>.vuepress/public</code> 中， 它们最终会被复制到生成的静态文件夹中。</p><p>如果你希望引用一张放在 .vuepress/public 中的图片，你需要使用这样路径：/image.png</p><h3 id="markdown-应用" tabindex="-1"><a class="header-anchor" href="#markdown-应用" aria-hidden="true">#</a> Markdown 应用</h3><p>所有的标题将会自动地应用 anchor（锚） 链接，anchor 的渲染可以通过 markdown.anchor 来配置。</p>`,13),G={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},j={href:"http://index.md",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>以如下的文件结构为例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├─ README.md
├─ foo
│  ├─ README.md
│  ├─ one.md
│  └─ two.md
└─ bar
   ├─ README.md
   ├─ three.md
   └─ four.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假设你现在在 foo/one.md 中：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Home](/) &lt;!-- 跳转到根部的 README.md --&gt;
[foo](/foo/) &lt;!-- 跳转到 foo 文件夹的 index.html --&gt;
[foo heading](./#heading) &lt;!-- 跳转到 foo/index.html 的特定标题位置 --&gt;
[bar - three](../bar/three.md) &lt;!-- 具体文件可以使用 .md 结尾（推荐） --&gt;
[bar - four](../bar/four.html) &lt;!-- 也可以用 .html --&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你会得到这样的页面：</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221528752.png" width="550"></div><p>现在你已经了解了基本的目录结构，并且已经学习了如何使用 Markdown 语法，现在你就可以在这个项目中添加内容了。</p><h3 id="front-matter" tabindex="-1"><a class="header-anchor" href="#front-matter" aria-hidden="true">#</a> Front Matter</h3><p>front matter 必须是 markdown 文件中的第一部分，并且必须采用在三点划线之间书写的有效的 YAML。 这是一个基本的例子：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 博客标题
<span class="token key atrule">author</span><span class="token punctuation">:</span> 作者名
<span class="token key atrule">description</span><span class="token punctuation">:</span> 当前页面的描述
<span class="token key atrule">layout</span><span class="token punctuation">:</span> 布局</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除去这些还有很多，需要根据开发者自身需求使用调整。</p><h3 id="首页" tabindex="-1"><a class="header-anchor" href="#首页" aria-hidden="true">#</a> 首页</h3>`,12),M={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},A=t(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">home</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">heroImage</span><span class="token punctuation">:</span> /hero.png
<span class="token key atrule">heroText</span><span class="token punctuation">:</span> Hero 标题
<span class="token key atrule">tagline</span><span class="token punctuation">:</span> Hero 副标题
<span class="token key atrule">actionText</span><span class="token punctuation">:</span> 快速上手 →
<span class="token key atrule">actionLink</span><span class="token punctuation">:</span> /zh/guide/
<span class="token key atrule">features</span><span class="token punctuation">:</span>

<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 简洁至上
  <span class="token key atrule">details</span><span class="token punctuation">:</span> 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Vue驱动
  <span class="token key atrule">details</span><span class="token punctuation">:</span> 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 高性能
  <span class="token key atrule">details</span><span class="token punctuation">:</span> VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。
  <span class="token key atrule">footer</span><span class="token punctuation">:</span> MIT Licensed <span class="token punctuation">|</span> Copyright © 2018<span class="token punctuation">-</span>present Evan You</span>

<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221553977.png" width="550"></div><p>你可以将相应的内容设置为 null 来禁用标题和副标题。</p><p>任何 YAML front matter 之后额外的内容将会以普通的 markdown 被渲染，并插入到 features 的后面。</p><h3 id="导航栏" tabindex="-1"><a class="header-anchor" href="#导航栏" aria-hidden="true">#</a> 导航栏</h3><p>你可以通过 themeConfig.logo 增加导航栏 Logo ，Logo 可以被放置在公共文件目录：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 以下内容放在 .vuepress/config.js 中</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">logo</span><span class="token operator">:</span> <span class="token string">&#39;/assets/logo.png&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以通过 themeConfig.nav 增加一些导航栏链接，并且你可以添加下拉选项，其他网站:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">nav</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;/foo/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;/bar/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Languages&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">{</span>
                        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Group1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;链接1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;链接2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">]</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Group2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;链接3&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;链接4&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">]</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;百度&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;https://www.baidu.com/&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221610772.png" width="550"></div><h3 id="侧边栏" tabindex="-1"><a class="header-anchor" href="#侧边栏" aria-hidden="true">#</a> 侧边栏</h3><p>想要使 侧边栏（Sidebar）生效，需要配置 themeConfig.sidebar，基本的配置，需要一个包含了多个链接的数组：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;/page-a&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token string">&#39;/page-b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Explicit link text&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以省略 .md 拓展名，同时以 / 结尾的路径将会被视为 */README.md，这个链接的文字将会被自动获取到（无论你是声明为页面的第一个 header，还是明确地在 YAML front matter 中指定页面的标题）。如果你想要显示地指定链接的文字，使用一个格式为 [link, text] 的数组。</p><p>你可以通过使用对象来将侧边栏划分成多个组：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Group 1&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// 必要的</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/foo/&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 可选的, 标题的跳转链接，应为绝对路径且必须存在</span>
                <span class="token literal-property property">collapsable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 可选的, 默认值是 true,</span>
                <span class="token literal-property property">sidebarDepth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token comment">// 可选的, 默认值是 1</span>
                <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token string">&#39;/&#39;</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Group 2&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token literal-property property">initialOpenGroupIndex</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">// 可选的, 默认值是 0</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>侧边栏的每个子组默认是可折叠的，你可以设置 collapsable: false 来让一个组永远都是展开状态。</p><p>如果你想为不同的页面组来显示不同的侧边栏，首先，将你的页面文件组织成下述的目录结构：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>.
├─ README.md
├─ contact.md
├─ about.md
├─ foo/
│ ├─ README.md
│ ├─ one.md
│ └─ two.md
└─ bar/
├─ README.md
├─ three.md
└─ four.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，遵循以下的侧边栏配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;/foo/&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>     <span class="token comment">/* /foo/ */</span>
                <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>  <span class="token comment">/* /foo/one.html */</span>
                <span class="token string">&#39;two&#39;</span>   <span class="token comment">/* /foo/two.html */</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>

            <span class="token string-property property">&#39;/bar/&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>      <span class="token comment">/* /bar/ */</span>
                <span class="token string">&#39;three&#39;</span><span class="token punctuation">,</span> <span class="token comment">/* /bar/three.html */</span>
                <span class="token string">&#39;four&#39;</span>   <span class="token comment">/* /bar/four.html */</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>

            <span class="token comment">// fallback</span>
            <span class="token string-property property">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>        <span class="token comment">/* / */</span>
                <span class="token string">&#39;contact&#39;</span><span class="token punctuation">,</span> <span class="token comment">/* /contact.html */</span>
                <span class="token string">&#39;about&#39;</span>    <span class="token comment">/* /about.html */</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你希望自动生成一个仅仅包含了当前页面标题（headers）链接的侧边栏，你可以通过 YAML front matter 来实现：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">sidebar</span><span class="token punctuation">:</span> auto</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以通过配置来在所有页面中启用它：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vuepress-资源" tabindex="-1"><a class="header-anchor" href="#vuepress-资源" aria-hidden="true">#</a> VuePress 资源</h3>`,27),P={href:"https://github.com/vuepress/awesome-vuepress",target:"_blank",rel:"noopener noreferrer"},V=t(`<p>其中包含了 VuePress 的各种资源、插件、主题等等。</p><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><p>如果你已经把内容编辑好，就可以准备部署了，有三种方法供你参考：</p><ol><li>你可以选择购买服务器，购买域名来部署这个静态网站，</li><li>购买了服务器和域名，把博客部署在 Gitee/GitHub/Coding 上，用云服务做跳转</li><li>既不买域名也不买服务器，直接把网站部署在 Gitee/GitHub/Coding 的 Pages 中，会生成一个独属于你的域名。</li></ol><p>这里我们讲第三种，白嫖方案。</p><p>部署之前你需要先生成静态文件，在命令行中输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vuepress build docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着使用 git 命令，先暂存所有文件，再提交暂存命令，最后上传到 Gitee</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;部署&#39;</span>
<span class="token function">git</span> push https://gitee.com/<span class="token operator">&lt;</span>用户名<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>仓库名<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就是上传成功了，可以在 Gitee 仓库中查看。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221639110.png" width="550"></div><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221639391.png" width="550"></div><p>最后，我们在<code>服务</code>中选择 <code>Gitee Pages</code>，选择部署分支为 <code>master</code>，选择部署目录为 <code>/docs/.vuepress/dist</code>，点击更新</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221641747.png" width="550"></div><p>等待更新完成，会出现网站地址，我们点击进入，如果访问成功，则说明部署成功。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302221648446.png" width="550"></div>`,16);function L(S,T){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,d,u,m,v,k,n("p",null,[s("进入 "),n("a",g,[s("Node.js"),e(a)]),s(" 的官网，选择长期维护版下载。")]),h,n("p",null,[s("git 下载地址： "),n("a",b,[s("https://git-scm.com/downloads"),e(a)])]),y,n("p",null,[s("在 "),n("a",f,[s("Gitee"),e(a)]),s(" 中新建图床之前，你需要有一个 Gitee 账号。")]),x,n("p",null,[s("关于 VuePress 更多的内容，可以了解 VuePress 的官方文档："),n("a",_,[s("https://vuepress.vuejs.org/zh/"),e(a)])]),w,n("p",null,[s("网站内部的链接，将会被转换成 <router-link> 用于 SPA 导航。同时，站内的每一个文件夹下的 "),n("a",G,[s("README.md"),e(a)]),s(" 或者 "),n("a",j,[s("index.md"),e(a)]),s(" 文件都会被自动编译为 index.html，对应的链接将被视为 /。")]),E,n("p",null,[s("默认的主题提供了一个首页（Homepage）的布局。想要使用它，需要在你的根级 "),n("a",M,[s("README.md"),e(a)]),s(" 的 YAML front matter 指定 home: true。以下是一个如何使用的例子：")]),A,n("p",null,[s("如果你觉得样式过于单调，功能少，可以看一看 VuePress 的开源项目："),n("a",P,[s("Awesome Vuepress"),e(a)])]),V])}const C=i(c,[["render",L],["__file","05.markdown-vuepress.html.vue"]]);export{C as default};
