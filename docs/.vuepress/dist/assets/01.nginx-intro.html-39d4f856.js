import{_ as i,W as e,X as n,a1 as r}from"./framework-0436675f.js";const t={},a=r('<p>Nginx 读作 <code>engine-ex</code>，它是一个开源、轻量级和高性能的 Web 服务器，也用作 HTTP、HTTPS、SMTP、IMAP、POP3 协议的反向代理服务器，另一方面，它也用作 IMAP、POP3 和 IMAP 的 HTTP 负载均衡器、HTTP 缓存和电子邮件代理。</p><p>简而言之，我们可以说 Nginx 是一种用于处理并发请求的软件。</p><h2 id="nginx-的应用场景" tabindex="-1"><a class="header-anchor" href="#nginx-的应用场景" aria-hidden="true">#</a> Nginx 的应用场景</h2><ul><li><p>HTTP / HTTPS 服务器：Nginx 本身也是一个静态资源的服务器，当只有静态资源的时候，就可以使用 Nginx 来做服务器，如果一个网站只是静态页面的话，那么就可以通过这种方式来实现部署；</p></li><li><p>FTP 服务器：通常会提供一个上传的功能，其他应用如果需要静态资源就从该静态服务器中获取；</p></li><li><p>反向代理（Reverse Proxy）：方式是以代理服务器来接受网络上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到结果返回给网络上请求连接的客户端，此时代理服务器对外表现为一个反向代理服务器。</p></li><li><p>负载均衡：也是 Nginx 常用的一个功能，负载均衡的意思就是分摊到多个操作单元上进行执行，例如 Web 服务器、FTP 服务器、企业关键应用服务器和其他关键人物服务器等，从而共同完成工作任务。</p></li></ul><h3 id="什么是反向代理" tabindex="-1"><a class="header-anchor" href="#什么是反向代理" aria-hidden="true">#</a> 什么是反向代理</h3><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302222102422.png" width="550"></div><h2 id="为什么要使用-nginx" tabindex="-1"><a class="header-anchor" href="#为什么要使用-nginx" aria-hidden="true">#</a> 为什么要使用 Nginx？</h2><p>Nginx 以市场份额和域数量位居第一，是大多数开发者的首选。之前一直是 Apache，后来随着互联网的兴起，Nginx 已经取代了 Apache，成为市场占有率第一。</p><div align="center"><img src="https://cdn.staticaly.com/gh/bigrich-luo/typora-picgo-images-1@master/images/202302222058014.png" width="550"></div><ul><li><p><strong>高并发支持</strong>：单机能够支持 10W+ 的并发连接（取决于内存大小，极限能够到百万），那么在实际生产中也是非常能接近这个数字的，这主要得益于 Nginx 在 Linux 环境下使用了 EpolllO 多路复用模型；</p></li><li><p><strong>内存消耗低</strong>：在同类型 web 服务中，nginx 比 apache 占用的内存资源更少，在一般情况下 10K 非活跃的 HTTP Keep-Alive 连接在 Nginx 中仅消耗 2.5M 内存；</p></li><li><p><strong>高扩展性</strong>： 低耦合的模块设计，并且有丰富的第三方模块支持；</p></li><li><p><strong>高可靠性</strong>：经过十几年各种复杂场景和各大公司的生产环境验证，并且 Nginx 的架构是由 master 进程和 worker 进程组成的，如果 worker 进程出现问题，那么 master 进程可以快速开启一个新的 worker 进程提供服务。</p></li></ul>',11),g=[a];function o(s,l){return e(),n("div",null,g)}const p=i(t,[["render",o],["__file","01.nginx-intro.html.vue"]]);export{p as default};
